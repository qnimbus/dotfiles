{{- if eq .chezmoi.os "linux" -}}
#!/usr/bin/env bash
set -euo pipefail

#############
# Functions #
#############

has() { command -v "$1" >/dev/null 2>&1; }

# helper: append line to file only if exact line not present
ensure_line() {
  local line="$1" file="$2"
  grep -qxF "$line" "$file" 2>/dev/null || printf '%b\n' "$line" >> "$file"
}

##########
# Script #
##########

# Ensure ~/.local/bin exists and is on PATH now and later
mkdir -p "$HOME/.local/bin"
case ":$PATH:" in *":$HOME/.local/bin:"*) ;; *) export PATH="$HOME/.local/bin:$PATH" ;; esac

# Install Starship if missing
if ! has starship; then
  # Install to ~/.local/bin (works without sudo)
  output=$(curl -sS https://starship.rs/install.sh | sh -s -- -y -b "$HOME/.local/bin" 2>&1)
fi

# Idempotently ensure ~/.local/bin is on PATH and starship is initialized for bash
BASHRC="$HOME/.bashrc"

# Create file if missing
[ -f "$BASHRC" ] || touch "$BASHRC"

# Create a separate section in .bashrc

ensure_line "\n" "$BASHRC"
ensure_line "### chezmoi edit ###" "$BASHRC"
ensure_line "" "$BASHRC"

# Put ~/.local/bin on PATH for future bash shells (before starship init)
ensure_line 'export PATH="$HOME/.local/bin:$PATH"' "$BASHRC"

# Enable starship for bash (idempotent)
ensure_line 'eval "$(starship init bash)"' "$BASHRC"

# Final sanity check (absolute path + PATH form)
if [ -x "$HOME/.local/bin/starship" ] || command -v starship >/dev/null 2>&1; then
  echo "Starship installed."
else
  echo "ERROR: Starship installation failed." >&2
  exit 1
fi

echo "Starship installed and enabled for bash (idempotent). Open a new shell to see it."
{{- end -}}
